{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth.service.ts","webpack:///./src/app/config/config.component.html","webpack:///./src/app/config/config.component.ts","webpack:///./src/app/config/config.service.ts","webpack:///./src/app/downloader/downloader.component.html","webpack:///./src/app/downloader/downloader.component.ts","webpack:///./src/app/downloader/downloader.service.ts","webpack:///./src/app/heroes/heroes.component.css","webpack:///./src/app/heroes/heroes.component.html","webpack:///./src/app/heroes/heroes.component.ts","webpack:///./src/app/heroes/heroes.service.ts","webpack:///./src/app/http-error-handler.service.ts","webpack:///./src/app/http-interceptors/auth-interceptor.ts","webpack:///./src/app/http-interceptors/caching-interceptor.ts","webpack:///./src/app/http-interceptors/ensure-https-interceptor.ts","webpack:///./src/app/http-interceptors/index.ts","webpack:///./src/app/http-interceptors/logging-interceptor.ts","webpack:///./src/app/http-interceptors/noop-interceptor.ts","webpack:///./src/app/http-interceptors/trim-name-interceptor.ts","webpack:///./src/app/http-interceptors/upload-interceptor.ts","webpack:///./src/app/in-memory-data.service.ts","webpack:///./src/app/message.service.ts","webpack:///./src/app/messages/messages.component.html","webpack:///./src/app/messages/messages.component.ts","webpack:///./src/app/package-search/package-search.component.html","webpack:///./src/app/package-search/package-search.component.ts","webpack:///./src/app/package-search/package-search.service.ts","webpack:///./src/app/request-cache.service.ts","webpack:///./src/app/uploader/uploader.component.html","webpack:///./src/app/uploader/uploader.component.ts","webpack:///./src/app/uploader/uploader.service.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<h1>HTTP Sample</h1>\\r\\n<div>\\r\\n  <input type=\\\"checkbox\\\" id=\\\"heroes\\\" [checked]=\\\"toggleHeroes\\\" (click)=\\\"toggleHeroes()\\\">\\r\\n  <label for=\\\"heroes\\\">Heroes</label>\\r\\n\\r\\n  <input type=\\\"checkbox\\\" id=\\\"config\\\" [checked]=\\\"showConfig\\\" (click)=\\\"toggleConfig()\\\">\\r\\n  <label for=\\\"config\\\">Config</label>\\r\\n\\r\\n  <input type=\\\"checkbox\\\" id=\\\"downloader\\\" [checked]=\\\"showDownloader\\\" (click)=\\\"toggleDownloader()\\\">\\r\\n  <label for=\\\"downloader\\\">Downloader</label>\\r\\n\\r\\n  <input type=\\\"checkbox\\\" id=\\\"uploader\\\" [checked]=\\\"showUploader\\\" (click)=\\\"toggleUploader()\\\">\\r\\n  <label for=\\\"uploader\\\">Uploader</label>\\r\\n\\r\\n  <input type=\\\"checkbox\\\" id=\\\"search\\\" [checked]=\\\"showSearch\\\" (click)=\\\"toggleSearch()\\\">\\r\\n  <label for=\\\"search\\\">Search</label>\\r\\n</div>\\r\\n\\r\\n<app-heroes *ngIf=\\\"showHeroes\\\"></app-heroes>\\r\\n<app-messages></app-messages>\\r\\n<app-config *ngIf=\\\"showConfig\\\"></app-config>\\r\\n<app-downloader *ngIf=\\\"showDownloader\\\"></app-downloader>\\r\\n<app-uploader *ngIf=\\\"showUploader\\\"></app-uploader>\\r\\n<app-package-search *ngIf=\\\"showSearch\\\"></app-package-search>\\r\\n\\r\\n\\r\\n<!-- \\r\\nCopyright 2017-2018 Google Inc. All Rights Reserved.\\r\\nUse of this source code is governed by an MIT-style license that\\r\\ncan be found in the LICENSE file at http://angular.io/license\\r\\n-->\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n  showHeroes = true;\r\n  showConfig = true;\r\n  showDownloader = true;\r\n  showUploader = true;\r\n  showSearch = true;\r\n\r\n  toggleHeroes() { this.showHeroes = !this.showHeroes; }\r\n  toggleConfig() { this.showConfig = !this.showConfig; }\r\n  toggleDownloader() { this.showDownloader = !this.showDownloader; }\r\n  toggleUploader() { this.showUploader = !this.showUploader; }\r\n  toggleSearch() { this.showSearch = !this.showSearch; }\r\n }\r\n\r\n\r\n/*\r\nCopyright 2017-2018 Google Inc. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/","import { NgModule }         from '@angular/core';\r\nimport { BrowserModule }    from '@angular/platform-browser';\r\nimport { FormsModule }      from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { HttpClientXsrfModule } from '@angular/common/http';\r\n\r\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\r\nimport { InMemoryDataService }  from './in-memory-data.service';\r\n\r\nimport { RequestCache, RequestCacheWithMap } from './request-cache.service';\r\n\r\nimport { AppComponent }         from './app.component';\r\nimport { AuthService }          from './auth.service';\r\nimport { ConfigComponent }      from './config/config.component';\r\nimport { DownloaderComponent }  from './downloader/downloader.component';\r\nimport { HeroesComponent }      from './heroes/heroes.component';\r\nimport { HttpErrorHandler }     from './http-error-handler.service';\r\nimport { MessageService }       from './message.service';\r\nimport { MessagesComponent }    from './messages/messages.component';\r\nimport { PackageSearchComponent } from './package-search/package-search.component';\r\nimport { UploaderComponent }    from './uploader/uploader.component';\r\n\r\nimport { httpInterceptorProviders } from './http-interceptors/index';\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    // import HttpClientModule after BrowserModule.\r\n    HttpClientModule,\r\n    HttpClientXsrfModule.withOptions({\r\n      cookieName: 'My-Xsrf-Cookie',\r\n      headerName: 'My-Xsrf-Header',\r\n    }),\r\n\r\n    // The HttpClientInMemoryWebApiModule module intercepts HTTP requests\r\n    // and returns simulated server responses.\r\n    // Remove it when a real server is ready to receive requests.\r\n    HttpClientInMemoryWebApiModule.forRoot(\r\n      InMemoryDataService, {\r\n        dataEncapsulation: false,\r\n        passThruUnknownUrl: true,\r\n        put204: false // return entity after PUT/update\r\n      }\r\n    )\r\n  ],\r\n  declarations: [\r\n    AppComponent,\r\n    ConfigComponent,\r\n    DownloaderComponent,\r\n    HeroesComponent,\r\n    MessagesComponent,\r\n    UploaderComponent,\r\n    PackageSearchComponent,\r\n  ],\r\n  providers: [\r\n    AuthService,\r\n    HttpErrorHandler,\r\n    MessageService,\r\n    { provide: RequestCache, useClass: RequestCacheWithMap },\r\n    httpInterceptorProviders\r\n  ],\r\n  bootstrap: [ AppComponent ]\r\n})\r\nexport class AppModule {}\r\n\r\n\r\n/*\r\nCopyright 2017-2018 Google Inc. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/","import { Injectable } from '@angular/core';\r\n\r\n/** Mock client-side authentication/authorization service */\r\n@Injectable()\r\nexport class AuthService {\r\n  getAuthorizationToken() {\r\n    return 'some-auth-token';\r\n  }\r\n}\r\n\r\n\r\n/*\r\nCopyright 2017-2018 Google Inc. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/","module.exports = \"<h3>Get configuration from JSON file</h3>\\r\\n<div>\\r\\n  <button (click)=\\\"clear(); showConfig()\\\">get</button>\\r\\n  <button (click)=\\\"clear(); showConfigResponse()\\\">getResponse</button>\\r\\n  <button (click)=\\\"clear()\\\">clear</button>\\r\\n  <button (click)=\\\"clear(); makeError()\\\">error</button>\\r\\n  <span *ngIf=\\\"config\\\">\\r\\n    <p>Heroes API URL is \\\"{{config.heroesUrl}}\\\"</p>\\r\\n    <p>Textfile URL is \\\"{{config.textfile}}\\\"</p>\\r\\n    <div *ngIf=\\\"headers\\\">\\r\\n      Response headers:\\r\\n      <ul>\\r\\n        <li *ngFor=\\\"let header of headers\\\">{{header}}</li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </span>\\r\\n</div>\\r\\n<p *ngIf=\\\"error\\\" class=\\\"error\\\">{{error | json}}</p>\\r\\n\\r\\n\\r\\n<!-- \\r\\nCopyright 2017-2018 Google Inc. All Rights Reserved.\\r\\nUse of this source code is governed by an MIT-style license that\\r\\ncan be found in the LICENSE file at http://angular.io/license\\r\\n-->\"","import { Component } from '@angular/core';\r\nimport { Config, ConfigService } from './config.service';\r\nimport { MessageService } from '../message.service';\r\n\r\n@Component({\r\n  selector: 'app-config',\r\n  templateUrl: './config.component.html',\r\n  providers: [ ConfigService ],\r\n  styles: ['.error {color: red;}']\r\n})\r\nexport class ConfigComponent {\r\n  error: any;\r\n  headers: string[];\r\n  config: Config;\r\n\r\n  constructor(private configService: ConfigService) {}\r\n\r\n  clear() {\r\n    this.config = undefined;\r\n    this.error = undefined;\r\n    this.headers = undefined;\r\n  }\r\n\r\n  showConfig() {\r\n    this.configService.getConfig()\r\n      .subscribe(\r\n        (data: Config) => this.config = { ...data }, // success path\r\n        error => this.error = error // error path\r\n      );\r\n  }\r\n\r\n  showConfig_v1() {\r\n    this.configService.getConfig_1()\r\n      .subscribe((data: Config) => this.config = {\r\n          heroesUrl: data['heroesUrl'],\r\n          textfile:  data['textfile']\r\n      });\r\n  }\r\n\r\n  showConfig_v2() {\r\n    this.configService.getConfig()\r\n      // clone the data object, using its known Config shape\r\n      .subscribe((data: Config) => this.config = { ...data });\r\n  }\r\n\r\n  showConfigResponse() {\r\n    this.configService.getConfigResponse()\r\n      // resp is of type `HttpResponse<Config>`\r\n      .subscribe(resp => {\r\n        // display its headers\r\n        const keys = resp.headers.keys();\r\n        this.headers = keys.map(key =>\r\n          `${key}: ${resp.headers.get(key)}`);\r\n\r\n        // access the body directly, which is typed as `Config`.\r\n        this.config = { ... resp.body };\r\n      });\r\n  }\r\n  makeError() {\r\n    this.configService.makeIntentionalError().subscribe(null, error => this.error = error );\r\n  }\r\n}\r\n\r\n\r\n/*\r\nCopyright 2017-2018 Google Inc. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\n\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, retry } from 'rxjs/operators';\r\n\r\nexport interface Config {\r\n  heroesUrl: string;\r\n  textfile: string;\r\n}\r\n\r\n@Injectable()\r\nexport class ConfigService {\r\n  configUrl = 'assets/config.json';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getConfig() {\r\n    return this.http.get<Config>(this.configUrl)\r\n      .pipe(\r\n        retry(3), // retry a failed request up to 3 times\r\n        catchError(this.handleError) // then handle the error\r\n      );\r\n  }\r\n\r\n  getConfig_1() {\r\n    return this.http.get(this.configUrl);\r\n  }\r\n\r\n  getConfig_2() {\r\n    // now returns an Observable of Config\r\n    return this.http.get<Config>(this.configUrl);\r\n  }\r\n\r\n  getConfig_3() {\r\n    return this.http.get<Config>(this.configUrl)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  getConfigResponse(): Observable<HttpResponse<Config>> {\r\n    return this.http.get<Config>(\r\n      this.configUrl, { observe: 'response' });\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse) {\r\n    if (error.error instanceof ErrorEvent) {\r\n      // A client-side or network error occurred. Handle it accordingly.\r\n      console.error('An error occurred:', error.error.message);\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong,\r\n      console.error(\r\n        `Backend returned code ${error.status}, ` +\r\n        `body was: ${error.error}`);\r\n    }\r\n    // return an observable with a user-facing error message\r\n    return throwError(\r\n      'Something bad happened; please try again later.');\r\n  };\r\n\r\n  makeIntentionalError() {\r\n    return this.http.get('not/a/real/url')\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n}\r\n\r\n\r\n/*\r\nCopyright 2017-2018 Google Inc. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/","module.exports = \"<h3>Download the textfile</h3>\\r\\n<button (click)=\\\"download()\\\">Download</button>\\r\\n<button (click)=\\\"clear()\\\">clear</button>\\r\\n<p *ngIf=\\\"contents\\\">Contents: \\\"{{contents}}\\\"</p>\\r\\n\\r\\n\\r\\n<!-- \\r\\nCopyright 2017-2018 Google Inc. All Rights Reserved.\\r\\nUse of this source code is governed by an MIT-style license that\\r\\ncan be found in the LICENSE file at http://angular.io/license\\r\\n-->\"","import { Component } from '@angular/core';\r\nimport { DownloaderService } from './downloader.service';\r\n\r\n@Component({\r\n  selector: 'app-downloader',\r\n  templateUrl: './downloader.component.html',\r\n  providers: [ DownloaderService ]\r\n})\r\nexport class DownloaderComponent {\r\n  contents: string;\r\n  constructor(private downloaderService: DownloaderService) {}\r\n\r\n  clear() {\r\n    this.contents = undefined;\r\n  }\r\n\r\n  download() {\r\n    this.downloaderService.getTextFile('assets/textfile.txt')\r\n      .subscribe(results => this.contents = results);\r\n  }\r\n}\r\n\r\n\r\n/*\r\nCopyright 2017-2018 Google Inc. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { tap } from 'rxjs/operators';\r\n\r\nimport { MessageService } from '../message.service';\r\n\r\n@Injectable()\r\nexport class DownloaderService {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private messageService: MessageService) { }\r\n\r\n  getTextFile(filename: string) {\r\n    // The Observable returned by get() is of type Observable<string>\r\n    // because a text response was specified.\r\n    // There's no need to pass a <string> type parameter to get().\r\n    return this.http.get(filename, {responseType: 'text'})\r\n      .pipe(\r\n        tap( // Log the result or error\r\n          data => this.log(filename, data),\r\n          error => this.logError(filename, error)\r\n        )\r\n      );\r\n  }\r\n\r\n  private log(filename: string, data: string) {\r\n    const message = `DownloaderService downloaded \"${filename}\" and got \"${data}\".`;\r\n    this.messageService.add(message);\r\n  }\r\n\r\n  private logError(filename: string, error: any) {\r\n    const message = `DownloaderService failed to download \"${filename}\"; got error \"${error.message}\".`;\r\n    console.error(message);\r\n    this.messageService.add(message);\r\n  }\r\n}\r\n\r\n\r\n/*\r\nCopyright 2017-2018 Google Inc. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/","module.exports = \"/* HeroesComponent's private CSS styles */\\r\\n.heroes {\\r\\n  margin: 0 0 2em 0;\\r\\n  list-style-type: none;\\r\\n  padding: 0;\\r\\n  width: 15em;\\r\\n}\\r\\n.heroes li {\\r\\n  position: relative;\\r\\n  cursor: pointer;\\r\\n  background-color: #EEE;\\r\\n  margin: .5em;\\r\\n  padding: .3em 0;\\r\\n  height: 1.6em;\\r\\n  border-radius: 4px;\\r\\n  width: 19em;\\r\\n}\\r\\n.heroes li:hover {\\r\\n  color: #607D8B;\\r\\n  background-color: #DDD;\\r\\n  left: .1em;\\r\\n}\\r\\n.heroes a {\\r\\n  color: #888;\\r\\n  text-decoration: none;\\r\\n  position: relative;\\r\\n  display: block;\\r\\n  width: 250px;\\r\\n}\\r\\n.heroes a:hover {\\r\\n  color:#607D8B;\\r\\n}\\r\\n.heroes .badge {\\r\\n  display: inline-block;\\r\\n  font-size: small;\\r\\n  color: white;\\r\\n  padding: 0.8em 0.7em 0 0.7em;\\r\\n  background-color: #607D8B;\\r\\n  line-height: 1em;\\r\\n  position: relative;\\r\\n  left: -1px;\\r\\n  top: -4px;\\r\\n  height: 1.8em;\\r\\n  min-width: 16px;\\r\\n  text-align: right;\\r\\n  margin-right: .8em;\\r\\n  border-radius: 4px 0 0 4px;\\r\\n}\\r\\n.button {\\r\\n  background-color: #eee;\\r\\n  border: none;\\r\\n  padding: 5px 10px;\\r\\n  border-radius: 4px;\\r\\n  cursor: pointer;\\r\\n  cursor: hand;\\r\\n  font-family: Arial;\\r\\n}\\r\\nbutton:hover {\\r\\n  background-color: #cfd8dc;\\r\\n}\\r\\nbutton.delete {\\r\\n  position: relative;\\r\\n  left: 24em;\\r\\n  top: -32px;\\r\\n  background-color: gray !important;\\r\\n  color: white;\\r\\n  display: inherit;\\r\\n  padding: 5px 8px;\\r\\n  width: 2em;\\r\\n}\\r\\ninput {\\r\\n  font-size: 100%;\\r\\n  margin-bottom: 2px;\\r\\n  width: 11em;\\r\\n}\\r\\n.heroes input {\\r\\n  position: relative;\\r\\n  top: -3px;\\r\\n  width: 12em;\\r\\n}\\r\\n/*\\r\\nCopyright 2017-2018 Google Inc. All Rights Reserved.\\r\\nUse of this source code is governed by an MIT-style license that\\r\\ncan be found in the LICENSE file at http://angular.io/license\\r\\n*/\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaGVyb2VzL2hlcm9lcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDBDQUEwQztBQUMxQztFQUNFLGtCQUFrQjtFQUNsQixzQkFBc0I7RUFDdEIsV0FBVztFQUNYLFlBQVk7Q0FDYjtBQUNEO0VBQ0UsbUJBQW1CO0VBQ25CLGdCQUFnQjtFQUNoQix1QkFBdUI7RUFDdkIsYUFBYTtFQUNiLGdCQUFnQjtFQUNoQixjQUFjO0VBQ2QsbUJBQW1CO0VBQ25CLFlBQVk7Q0FDYjtBQUVEO0VBQ0UsZUFBZTtFQUNmLHVCQUF1QjtFQUN2QixXQUFXO0NBQ1o7QUFFRDtFQUNFLFlBQVk7RUFDWixzQkFBc0I7RUFDdEIsbUJBQW1CO0VBQ25CLGVBQWU7RUFDZixhQUFhO0NBQ2Q7QUFFRDtFQUNFLGNBQWM7Q0FDZjtBQUVEO0VBQ0Usc0JBQXNCO0VBQ3RCLGlCQUFpQjtFQUNqQixhQUFhO0VBQ2IsNkJBQTZCO0VBQzdCLDBCQUEwQjtFQUMxQixpQkFBaUI7RUFDakIsbUJBQW1CO0VBQ25CLFdBQVc7RUFDWCxVQUFVO0VBQ1YsY0FBYztFQUNkLGdCQUFnQjtFQUNoQixrQkFBa0I7RUFDbEIsbUJBQW1CO0VBQ25CLDJCQUEyQjtDQUM1QjtBQUVEO0VBQ0UsdUJBQXVCO0VBQ3ZCLGFBQWE7RUFDYixrQkFBa0I7RUFDbEIsbUJBQW1CO0VBQ25CLGdCQUFnQjtFQUNoQixhQUFhO0VBQ2IsbUJBQW1CO0NBQ3BCO0FBRUQ7RUFDRSwwQkFBMEI7Q0FDM0I7QUFFRDtFQUNFLG1CQUFtQjtFQUNuQixXQUFXO0VBQ1gsV0FBVztFQUNYLGtDQUFrQztFQUNsQyxhQUFhO0VBQ2IsaUJBQWlCO0VBQ2pCLGlCQUFpQjtFQUNqQixXQUFXO0NBQ1o7QUFFRDtFQUNFLGdCQUFnQjtFQUNoQixtQkFBbUI7RUFDbkIsWUFBWTtDQUNiO0FBRUQ7RUFDRSxtQkFBbUI7RUFDbkIsVUFBVTtFQUNWLFlBQVk7Q0FDYjtBQUdEOzs7O0VBSUUiLCJmaWxlIjoic3JjL2FwcC9oZXJvZXMvaGVyb2VzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBIZXJvZXNDb21wb25lbnQncyBwcml2YXRlIENTUyBzdHlsZXMgKi9cclxuLmhlcm9lcyB7XHJcbiAgbWFyZ2luOiAwIDAgMmVtIDA7XHJcbiAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xyXG4gIHBhZGRpbmc6IDA7XHJcbiAgd2lkdGg6IDE1ZW07XHJcbn1cclxuLmhlcm9lcyBsaSB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUVFO1xyXG4gIG1hcmdpbjogLjVlbTtcclxuICBwYWRkaW5nOiAuM2VtIDA7XHJcbiAgaGVpZ2h0OiAxLjZlbTtcclxuICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgd2lkdGg6IDE5ZW07XHJcbn1cclxuXHJcbi5oZXJvZXMgbGk6aG92ZXIge1xyXG4gIGNvbG9yOiAjNjA3RDhCO1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNEREQ7XHJcbiAgbGVmdDogLjFlbTtcclxufVxyXG5cclxuLmhlcm9lcyBhIHtcclxuICBjb2xvcjogIzg4ODtcclxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIHdpZHRoOiAyNTBweDtcclxufVxyXG5cclxuLmhlcm9lcyBhOmhvdmVyIHtcclxuICBjb2xvcjojNjA3RDhCO1xyXG59XHJcblxyXG4uaGVyb2VzIC5iYWRnZSB7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIGZvbnQtc2l6ZTogc21hbGw7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG4gIHBhZGRpbmc6IDAuOGVtIDAuN2VtIDAgMC43ZW07XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzYwN0Q4QjtcclxuICBsaW5lLWhlaWdodDogMWVtO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBsZWZ0OiAtMXB4O1xyXG4gIHRvcDogLTRweDtcclxuICBoZWlnaHQ6IDEuOGVtO1xyXG4gIG1pbi13aWR0aDogMTZweDtcclxuICB0ZXh0LWFsaWduOiByaWdodDtcclxuICBtYXJnaW4tcmlnaHQ6IC44ZW07XHJcbiAgYm9yZGVyLXJhZGl1czogNHB4IDAgMCA0cHg7XHJcbn1cclxuXHJcbi5idXR0b24ge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNlZWU7XHJcbiAgYm9yZGVyOiBub25lO1xyXG4gIHBhZGRpbmc6IDVweCAxMHB4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgY3Vyc29yOiBoYW5kO1xyXG4gIGZvbnQtZmFtaWx5OiBBcmlhbDtcclxufVxyXG5cclxuYnV0dG9uOmhvdmVyIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjY2ZkOGRjO1xyXG59XHJcblxyXG5idXR0b24uZGVsZXRlIHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgbGVmdDogMjRlbTtcclxuICB0b3A6IC0zMnB4O1xyXG4gIGJhY2tncm91bmQtY29sb3I6IGdyYXkgIWltcG9ydGFudDtcclxuICBjb2xvcjogd2hpdGU7XHJcbiAgZGlzcGxheTogaW5oZXJpdDtcclxuICBwYWRkaW5nOiA1cHggOHB4O1xyXG4gIHdpZHRoOiAyZW07XHJcbn1cclxuXHJcbmlucHV0IHtcclxuICBmb250LXNpemU6IDEwMCU7XHJcbiAgbWFyZ2luLWJvdHRvbTogMnB4O1xyXG4gIHdpZHRoOiAxMWVtO1xyXG59XHJcblxyXG4uaGVyb2VzIGlucHV0IHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgdG9wOiAtM3B4O1xyXG4gIHdpZHRoOiAxMmVtO1xyXG59XHJcblxyXG5cclxuLypcclxuQ29weXJpZ2h0IDIwMTctMjAxOCBHb29nbGUgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxyXG5Vc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0XHJcbmNhbiBiZSBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHA6Ly9hbmd1bGFyLmlvL2xpY2Vuc2VcclxuKi8iXX0= */\"","module.exports = \"<h3>Heroes</h3>\\r\\n<div>\\r\\n  <label>Hero name:\\r\\n    <input #heroName />\\r\\n  </label>\\r\\n  <!-- (click) passes input value to add() and then clears the input -->\\r\\n  <button (click)=\\\"add(heroName.value); heroName.value=''\\\">\\r\\n    add\\r\\n  </button>\\r\\n  <button (click)=\\\"search(heroName.value)\\\">\\r\\n    search\\r\\n  </button>\\r\\n</div>\\r\\n\\r\\n<ul class=\\\"heroes\\\">\\r\\n  <li *ngFor=\\\"let hero of heroes\\\">\\r\\n    <a (click)=\\\"edit(hero)\\\">\\r\\n      <span class=\\\"badge\\\">{{ hero.id || -1 }}</span>\\r\\n      <span *ngIf=\\\"hero!==editHero\\\">{{hero.name}}</span>\\r\\n      <input *ngIf=\\\"hero===editHero\\\" [(ngModel)]=\\\"hero.name\\\"\\r\\n        (blur)=\\\"update()\\\" (keyup.enter)=\\\"update()\\\">\\r\\n    </a>\\r\\n    <button class=\\\"delete\\\" title=\\\"delete hero\\\"\\r\\n    (click)=\\\"delete(hero)\\\">x</button>\\r\\n  </li>\\r\\n</ul>\\r\\n\\r\\n\\r\\n<!-- \\r\\nCopyright 2017-2018 Google Inc. All Rights Reserved.\\r\\nUse of this source code is governed by an MIT-style license that\\r\\ncan be found in the LICENSE file at http://angular.io/license\\r\\n-->\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { Hero } from './hero';\r\nimport { HeroesService } from './heroes.service';\r\n\r\n@Component({\r\n  selector: 'app-heroes',\r\n  templateUrl: './heroes.component.html',\r\n  providers: [ HeroesService ],\r\n  styleUrls: ['./heroes.component.css']\r\n})\r\nexport class HeroesComponent implements OnInit {\r\n  heroes: Hero[];\r\n  editHero: Hero; // the hero currently being edited\r\n\r\n  constructor(private heroesService: HeroesService) { }\r\n\r\n  ngOnInit() {\r\n    this.getHeroes();\r\n  }\r\n\r\n  getHeroes(): void {\r\n    this.heroesService.getHeroes()\r\n      .subscribe(heroes => this.heroes = heroes);\r\n  }\r\n\r\n  add(name: string): void {\r\n    this.editHero = undefined;\r\n    name = name.trim();\r\n    if (!name) { return; }\r\n\r\n    // The server will generate the id for this new hero\r\n    const newHero: Hero = { name } as Hero;\r\n    this.heroesService.addHero(newHero)\r\n      .subscribe(hero => this.heroes.push(hero));\r\n  }\r\n\r\n  delete(hero: Hero): void {\r\n    this.heroes = this.heroes.filter(h => h !== hero);\r\n    this.heroesService.deleteHero(hero.id).subscribe();\r\n    /*\r\n    // oops ... subscribe() is missing so nothing happens\r\n    this.heroesService.deleteHero(hero.id);\r\n    */\r\n  }\r\n\r\n  edit(hero) {\r\n    this.editHero = hero;\r\n  }\r\n\r\n  search(searchTerm: string) {\r\n    this.editHero = undefined;\r\n    if (searchTerm) {\r\n      this.heroesService.searchHeroes(searchTerm)\r\n        .subscribe(heroes => this.heroes = heroes);\r\n    }\r\n  }\r\n\r\n  update() {\r\n    if (this.editHero) {\r\n      this.heroesService.updateHero(this.editHero)\r\n        .subscribe(hero => {\r\n          // replace the hero in the heroes list with update from server\r\n          const ix = hero ? this.heroes.findIndex(h => h.id === hero.id) : -1;\r\n          if (ix > -1) { this.heroes[ix] = hero; }\r\n        });\r\n      this.editHero = undefined;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*\r\nCopyright 2017-2018 Google Inc. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { HttpHeaders } from '@angular/common/http';\r\n\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { Hero } from './hero';\r\nimport { HttpErrorHandler, HandleError } from '../http-error-handler.service';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    'Content-Type':  'application/json',\r\n    'Authorization': 'my-auth-token'\r\n  })\r\n};\r\n\r\n@Injectable()\r\nexport class HeroesService {\r\n  heroesUrl = 'api/heroes';  // URL to web api\r\n  private handleError: HandleError;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    httpErrorHandler: HttpErrorHandler) {\r\n    this.handleError = httpErrorHandler.createHandleError('HeroesService');\r\n  }\r\n\r\n  /** GET heroes from the server */\r\n  getHeroes (): Observable<Hero[]> {\r\n    return this.http.get<Hero[]>(this.heroesUrl)\r\n      .pipe(\r\n        catchError(this.handleError('getHeroes', []))\r\n      );\r\n  }\r\n\r\n  /* GET heroes whose name contains search term */\r\n  searchHeroes(term: string): Observable<Hero[]> {\r\n    term = term.trim();\r\n\r\n    // Add safe, URL encoded search parameter if there is a search term\r\n    const options = term ?\r\n     { params: new HttpParams().set('name', term) } : {};\r\n\r\n    return this.http.get<Hero[]>(this.heroesUrl, options)\r\n      .pipe(\r\n        catchError(this.handleError<Hero[]>('searchHeroes', []))\r\n      );\r\n  }\r\n\r\n  //////// Save methods //////////\r\n\r\n  /** POST: add a new hero to the database */\r\n  addHero (hero: Hero): Observable<Hero> {\r\n    return this.http.post<Hero>(this.heroesUrl, hero, httpOptions)\r\n      .pipe(\r\n        catchError(this.handleError('addHero', hero))\r\n      );\r\n  }\r\n\r\n  /** DELETE: delete the hero from the server */\r\n  deleteHero (id: number): Observable<{}> {\r\n    const url = `${this.heroesUrl}/${id}`; // DELETE api/heroes/42\r\n    return this.http.delete(url, httpOptions)\r\n      .pipe(\r\n        catchError(this.handleError('deleteHero'))\r\n      );\r\n  }\r\n\r\n  /** PUT: update the hero on the server. Returns the updated hero upon success. */\r\n  updateHero (hero: Hero): Observable<Hero> {\r\n    httpOptions.headers =\r\n      httpOptions.headers.set('Authorization', 'my-new-auth-token');\r\n\r\n    return this.http.put<Hero>(this.heroesUrl, hero, httpOptions)\r\n      .pipe(\r\n        catchError(this.handleError('updateHero', hero))\r\n      );\r\n  }\r\n}\r\n\r\n\r\n/*\r\nCopyright 2017-2018 Google Inc. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/","import { Injectable } from '@angular/core';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\nimport { Observable, of } from 'rxjs';\r\n\r\nimport { MessageService } from './message.service';\r\n\r\n/** Type of the handleError function returned by HttpErrorHandler.createHandleError */\r\nexport type HandleError =\r\n  <T> (operation?: string, result?: T) => (error: HttpErrorResponse) => Observable<T>;\r\n\r\n/** Handles HttpClient errors */\r\n@Injectable()\r\nexport class HttpErrorHandler {\r\n  constructor(private messageService: MessageService) { }\r\n\r\n  /** Create curried handleError function that already knows the service name */\r\n  createHandleError = (serviceName = '') => <T>\r\n    (operation = 'operation', result = {} as T) => this.handleError(serviceName, operation, result);\r\n\r\n  /**\r\n   * Returns a function that handles Http operation failures.\r\n   * This error handler lets the app continue to run as if no error occurred.\r\n   * @param serviceName = name of the data service that attempted the operation\r\n   * @param operation - name of the operation that failed\r\n   * @param result - optional value to return as the observable result\r\n   */\r\n  handleError<T> (serviceName = '', operation = 'operation', result = {} as T) {\r\n\r\n    return (error: HttpErrorResponse): Observable<T> => {\r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n\r\n      const message = (error.error instanceof ErrorEvent) ?\r\n        error.error.message :\r\n       `server returned code ${error.status} with body \"${error.error}\"`;\r\n\r\n      // TODO: better job of transforming error for user consumption\r\n      this.messageService.add(`${serviceName}: ${operation} failed: ${message}`);\r\n\r\n      // Let the app keep running by returning a safe result.\r\n      return of( result );\r\n    };\r\n\r\n  }\r\n}\r\n\r\n\r\n/*\r\nCopyright 2017-2018 Google Inc. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpEvent, HttpInterceptor, HttpHandler, HttpRequest\r\n} from '@angular/common/http';\r\n\r\nimport { AuthService } from '../auth.service';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private auth: AuthService) {}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    // Get the auth token from the service.\r\n    const authToken = this.auth.getAuthorizationToken();\r\n\r\n    /*\r\n    * The verbose way:\r\n    // Clone the request and replace the original headers with\r\n    // cloned headers, updated with the authorization.\r\n    const authReq = req.clone({\r\n      headers: req.headers.set('Authorization', authToken)\r\n    });\r\n    */\r\n    // Clone the request and set the new header in one step.\r\n    const authReq = req.clone({ setHeaders: { Authorization: authToken } });\r\n\r\n    // send cloned request with header to the next handler.\r\n    return next.handle(authReq);\r\n  }\r\n}\r\n\r\n\r\n/*\r\nCopyright 2017-2018 Google Inc. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpEvent, HttpHeaders, HttpRequest, HttpResponse,\r\n  HttpInterceptor, HttpHandler\r\n} from '@angular/common/http';\r\n\r\nimport { Observable, of } from 'rxjs';\r\nimport { startWith, tap } from 'rxjs/operators';\r\n\r\nimport { RequestCache } from '../request-cache.service';\r\nimport { searchUrl } from '../package-search/package-search.service';\r\n\r\n\r\n/**\r\n * If request is cachable (e.g., package search) and\r\n * response is in cache return the cached response as observable.\r\n * If has 'x-refresh' header that is true,\r\n * then also re-run the package search, using response from next(),\r\n * returning an observable that emits the cached response first.\r\n *\r\n * If not in cache or not cachable,\r\n * pass request through to next()\r\n */\r\n@Injectable()\r\nexport class CachingInterceptor implements HttpInterceptor {\r\n  constructor(private cache: RequestCache) {}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    // continue if not cachable.\r\n    if (!isCachable(req)) { return next.handle(req); }\r\n\r\n    const cachedResponse = this.cache.get(req);\r\n    // cache-then-refresh\r\n    if (req.headers.get('x-refresh')) {\r\n      const results$ = sendRequest(req, next, this.cache);\r\n      return cachedResponse ?\r\n        results$.pipe( startWith(cachedResponse) ) :\r\n        results$;\r\n    }\r\n    // cache-or-fetch\r\n    return cachedResponse ?\r\n      of(cachedResponse) : sendRequest(req, next, this.cache);\r\n  }\r\n}\r\n\r\n\r\n/** Is this request cachable? */\r\nfunction isCachable(req: HttpRequest<any>) {\r\n  // Only GET requests are cachable\r\n  return req.method === 'GET' &&\r\n    // Only npm package search is cachable in this app\r\n    -1 < req.url.indexOf(searchUrl);\r\n}\r\n\r\n/**\r\n * Get server response observable by sending request to `next()`.\r\n * Will add the response to the cache on the way out.\r\n */\r\nfunction sendRequest(\r\n  req: HttpRequest<any>,\r\n  next: HttpHandler,\r\n  cache: RequestCache): Observable<HttpEvent<any>> {\r\n\r\n  // No headers allowed in npm search request\r\n  const noHeaderReq = req.clone({ headers: new HttpHeaders() });\r\n\r\n  return next.handle(noHeaderReq).pipe(\r\n    tap(event => {\r\n      // There may be other events besides the response.\r\n      if (event instanceof HttpResponse) {\r\n        cache.put(req, event); // Update the cache.\r\n      }\r\n    })\r\n  );\r\n}\r\n\r\n\r\n\r\n/*\r\nCopyright 2017-2018 Google Inc. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpEvent, HttpInterceptor, HttpHandler, HttpRequest\r\n} from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class EnsureHttpsInterceptor implements HttpInterceptor {\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    // clone request and replace 'http://' with 'https://' at the same time\r\n    const secureReq = req.clone({\r\n      url: req.url.replace('http://', 'https://')\r\n    });\r\n    // send the cloned, \"secure\" request to the next handler.\r\n    return next.handle(secureReq);\r\n  }\r\n}\r\n\r\n\r\n/*\r\nCopyright 2017-2018 Google Inc. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/","/* \"Barrel\" of Http Interceptors */\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { AuthInterceptor } from './auth-interceptor';\r\nimport { CachingInterceptor } from './caching-interceptor';\r\nimport { EnsureHttpsInterceptor } from './ensure-https-interceptor';\r\nimport { LoggingInterceptor } from './logging-interceptor';\r\nimport { NoopInterceptor } from './noop-interceptor';\r\nimport { TrimNameInterceptor } from './trim-name-interceptor';\r\nimport { UploadInterceptor } from './upload-interceptor';\r\n\r\n\r\n/** Http interceptor providers in outside-in order */\r\nexport const httpInterceptorProviders = [\r\n  { provide: HTTP_INTERCEPTORS, useClass: NoopInterceptor, multi: true },\r\n\r\n  { provide: HTTP_INTERCEPTORS, useClass: EnsureHttpsInterceptor, multi: true },\r\n  { provide: HTTP_INTERCEPTORS, useClass: TrimNameInterceptor, multi: true },\r\n  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\r\n  { provide: HTTP_INTERCEPTORS, useClass: LoggingInterceptor, multi: true },\r\n  { provide: HTTP_INTERCEPTORS, useClass: UploadInterceptor, multi: true },\r\n  { provide: HTTP_INTERCEPTORS, useClass: CachingInterceptor, multi: true },\r\n\r\n];\r\n\r\n\r\n/*\r\nCopyright 2017-2018 Google Inc. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpEvent, HttpInterceptor, HttpHandler,\r\n  HttpRequest, HttpResponse\r\n} from '@angular/common/http';\r\n\r\nimport { finalize, tap } from 'rxjs/operators';\r\nimport { MessageService } from '../message.service';\r\n\r\n@Injectable()\r\nexport class LoggingInterceptor implements HttpInterceptor {\r\n  constructor(private messenger: MessageService) {}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    const started = Date.now();\r\n    let ok: string;\r\n\r\n    // extend server response observable with logging\r\n    return next.handle(req)\r\n      .pipe(\r\n        tap(\r\n          // Succeeds when there is a response; ignore other events\r\n          event => ok = event instanceof HttpResponse ? 'succeeded' : '',\r\n          // Operation failed; error is an HttpErrorResponse\r\n          error => ok = 'failed'\r\n        ),\r\n        // Log when response observable either completes or errors\r\n        finalize(() => {\r\n          const elapsed = Date.now() - started;\r\n          const msg = `${req.method} \"${req.urlWithParams}\"\r\n             ${ok} in ${elapsed} ms.`;\r\n          this.messenger.add(msg);\r\n        })\r\n      );\r\n  }\r\n}\r\n\r\n\r\n/*\r\nCopyright 2017-2018 Google Inc. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpEvent, HttpInterceptor, HttpHandler, HttpRequest\r\n} from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\n/** Pass untouched request through to the next request handler. */\r\n@Injectable()\r\nexport class NoopInterceptor implements HttpInterceptor {\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler):\r\n    Observable<HttpEvent<any>> {\r\n    return next.handle(req);\r\n  }\r\n}\r\n\r\n\r\n/*\r\nCopyright 2017-2018 Google Inc. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpEvent, HttpInterceptor, HttpHandler, HttpRequest\r\n} from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class TrimNameInterceptor implements HttpInterceptor {\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const body = req.body;\r\n    if (!body || !body.name ) {\r\n      return next.handle(req);\r\n    }\r\n    // copy the body and trim whitespace from the name property\r\n    const newBody = { ...body, name: body.name.trim() };\r\n    // clone request and set its body\r\n    const newReq = req.clone({ body: newBody });\r\n    // send the cloned request to the next handler.\r\n    return next.handle(newReq);\r\n  }\r\n}\r\n\r\n\r\n/*\r\nCopyright 2017-2018 Google Inc. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpEvent, HttpInterceptor, HttpHandler,\r\n  HttpRequest, HttpResponse,\r\n  HttpEventType, HttpProgressEvent\r\n} from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\n/** Simulate server replying to file upload request */\r\n@Injectable()\r\nexport class UploadInterceptor implements HttpInterceptor {\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    if (req.url.indexOf('/upload/file') === -1) {\r\n      return next.handle(req);\r\n    }\r\n    const delay = 300; // TODO: inject delay?\r\n    return createUploadEvents(delay);\r\n  }\r\n}\r\n\r\n/** Create simulation of upload event stream */\r\nfunction createUploadEvents(delay: number) {\r\n  // Simulate XHR behavior which would provide this information in a ProgressEvent\r\n  const chunks = 5;\r\n  const total = 12345678;\r\n  const chunkSize = Math.ceil(total / chunks);\r\n\r\n  return new Observable<HttpEvent<any>>(observer => {\r\n    // notify the event stream that the request was sent.\r\n    observer.next({type: HttpEventType.Sent});\r\n\r\n    uploadLoop(0);\r\n\r\n    function uploadLoop(loaded: number) {\r\n      // N.B.: Cannot use setInterval or rxjs delay (which uses setInterval)\r\n      // because e2e test won't complete. A zone thing?\r\n      // Use setTimeout and tail recursion instead.\r\n        setTimeout(() => {\r\n          loaded += chunkSize;\r\n\r\n          if (loaded >= total) {\r\n            const doneResponse = new HttpResponse({\r\n              status: 201, // OK but no body;\r\n            });\r\n            observer.next(doneResponse);\r\n            observer.complete();\r\n            return;\r\n          }\r\n\r\n          const progressEvent: HttpProgressEvent = {\r\n            type: HttpEventType.UploadProgress,\r\n            loaded,\r\n            total\r\n          };\r\n          observer.next(progressEvent);\r\n          uploadLoop(loaded);\r\n        }, delay);\r\n    }\r\n  });\r\n}\r\n\r\n\r\n/*\r\nCopyright 2017-2018 Google Inc. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/","import { InMemoryDbService } from 'angular-in-memory-web-api';\r\n\r\nexport class InMemoryDataService implements InMemoryDbService {\r\n  createDb() {\r\n    const heroes = [\r\n      { id: 11, name: 'Mr. Nice' },\r\n      { id: 12, name: 'Narco' },\r\n      { id: 13, name: 'Bombasto' },\r\n      { id: 14, name: 'Celeritas' },\r\n    ];\r\n    return {heroes};\r\n  }\r\n}\r\n\r\n\r\n/*\r\nCopyright 2017-2018 Google Inc. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class MessageService {\r\n  messages: string[] = [];\r\n\r\n  add(message: string) {\r\n    this.messages.push(message);\r\n  }\r\n\r\n  clear() {\r\n    this.messages = [];\r\n  }\r\n}\r\n\r\n\r\n/*\r\nCopyright 2017-2018 Google Inc. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/","module.exports = \"<div *ngIf=\\\"messageService.messages.length\\\">\\r\\n  <h3>Messages</h3>\\r\\n  <button class=\\\"clear\\\" (click)=\\\"messageService.clear()\\\">clear</button>\\r\\n  <br>\\r\\n  <ol>\\r\\n    <li *ngFor='let message of messageService.messages'> {{message}} </li>\\r\\n  </ol>\\r\\n</div>\\r\\n\\r\\n\\r\\n<!-- \\r\\nCopyright 2017-2018 Google Inc. All Rights Reserved.\\r\\nUse of this source code is governed by an MIT-style license that\\r\\ncan be found in the LICENSE file at http://angular.io/license\\r\\n-->\"","import { Component } from '@angular/core';\r\nimport { MessageService } from '../message.service';\r\n\r\n@Component({\r\n  selector: 'app-messages',\r\n  templateUrl: './messages.component.html'\r\n})\r\nexport class MessagesComponent {\r\n  constructor(public messageService: MessageService) {}\r\n}\r\n\r\n\r\n/*\r\nCopyright 2017-2018 Google Inc. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/","module.exports = \"<h3>Search Npm Packages</h3>\\r\\n<p><i>Searches when typing stops. Caches for 30 seconds.</i></p>\\r\\n<input (keyup)=\\\"search($event.target.value)\\\" id=\\\"name\\\" placeholder=\\\"Search\\\"/>\\r\\n<input type=\\\"checkbox\\\" id=\\\"refresh\\\" [checked]=\\\"withRefresh\\\" (click)=\\\"toggleRefresh()\\\">\\r\\n<label for=\\\"refresh\\\">with refresh</label>\\r\\n\\r\\n<ul>\\r\\n  <li *ngFor=\\\"let package of packages$ | async\\\">\\r\\n    <b>{{package.name}} v.{{package.version}}</b> -\\r\\n    <i>{{package.description}}</i>\\r\\n  </li>\\r\\n</ul>\\r\\n\\r\\n\\r\\n<!-- \\r\\nCopyright 2017-2018 Google Inc. All Rights Reserved.\\r\\nUse of this source code is governed by an MIT-style license that\\r\\ncan be found in the LICENSE file at http://angular.io/license\\r\\n-->\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\r\n\r\nimport { NpmPackageInfo, PackageSearchService } from './package-search.service';\r\n\r\n@Component({\r\n  selector: 'app-package-search',\r\n  templateUrl: './package-search.component.html',\r\n  providers: [ PackageSearchService ]\r\n})\r\nexport class PackageSearchComponent implements OnInit {\r\n  withRefresh = false;\r\n  packages$: Observable<NpmPackageInfo[]>;\r\n  private searchText$ = new Subject<string>();\r\n\r\n  search(packageName: string) {\r\n    this.searchText$.next(packageName);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.packages$ = this.searchText$.pipe(\r\n      debounceTime(500),\r\n      distinctUntilChanged(),\r\n      switchMap(packageName =>\r\n        this.searchService.search(packageName, this.withRefresh))\r\n    );\r\n  }\r\n\r\n  constructor(private searchService: PackageSearchService) { }\r\n\r\n\r\n  toggleRefresh() { this.withRefresh = ! this.withRefresh; }\r\n\r\n}\r\n\r\n\r\n/*\r\nCopyright 2017-2018 Google Inc. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\n\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\n\r\nimport { HttpErrorHandler, HandleError } from '../http-error-handler.service';\r\n\r\nexport interface NpmPackageInfo {\r\n  name: string;\r\n  version: string;\r\n  description: string;\r\n}\r\n\r\nexport const searchUrl = 'https://npmsearch.com/query';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    'x-refresh':  'true'\r\n  })\r\n};\r\n\r\nfunction createHttpOptions(packageName: string, refresh = false) {\r\n    // npm package name search api\r\n    // e.g., http://npmsearch.com/query?q=dom'\r\n    const params = new HttpParams({ fromObject: { q: packageName } });\r\n    const headerMap = refresh ? {'x-refresh': 'true'} : {};\r\n    const headers = new HttpHeaders(headerMap) ;\r\n    return { headers, params };\r\n}\r\n\r\n@Injectable()\r\nexport class PackageSearchService {\r\n  private handleError: HandleError;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    httpErrorHandler: HttpErrorHandler) {\r\n    this.handleError = httpErrorHandler.createHandleError('HeroesService');\r\n  }\r\n\r\n  search (packageName: string, refresh = false): Observable<NpmPackageInfo[]> {\r\n    // clear if no pkg name\r\n    if (!packageName.trim()) { return of([]); }\r\n\r\n    const options = createHttpOptions(packageName, refresh);\r\n\r\n    // TODO: Add error handling\r\n    return this.http.get(searchUrl, options).pipe(\r\n      map((data: any) => {\r\n        return data.results.map(entry => ({\r\n            name: entry.name[0],\r\n            version: entry.version[0],\r\n            description: entry.description[0]\r\n          } as NpmPackageInfo )\r\n        );\r\n      }),\r\n      catchError(this.handleError('search', []))\r\n    );\r\n  }\r\n}\r\n\r\n\r\n/*\r\nCopyright 2017-2018 Google Inc. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpResponse } from '@angular/common/http';\r\n\r\nimport { MessageService } from './message.service';\r\n\r\nexport interface RequestCacheEntry {\r\n  url: string;\r\n  response: HttpResponse<any>;\r\n  lastRead: number;\r\n}\r\n\r\nexport abstract class RequestCache {\r\n  abstract get(req: HttpRequest<any>): HttpResponse<any> | undefined;\r\n  abstract put(req: HttpRequest<any>, response: HttpResponse<any>): void\r\n}\r\n\r\nconst maxAge = 30000; // maximum cache age (ms)\r\n\r\n@Injectable()\r\nexport class RequestCacheWithMap implements RequestCache {\r\n\r\n  cache = new Map<string, RequestCacheEntry>();\r\n\r\n  constructor(private messenger: MessageService) { }\r\n\r\n  get(req: HttpRequest<any>): HttpResponse<any> | undefined {\r\n    const url = req.urlWithParams;\r\n    const cached = this.cache.get(url);\r\n\r\n    if (!cached) {\r\n      return undefined;\r\n    }\r\n\r\n    const isExpired = cached.lastRead < (Date.now() - maxAge);\r\n    const expired = isExpired ? 'expired ' : '';\r\n    this.messenger.add(\r\n      `Found ${expired}cached response for \"${url}\".`);\r\n    return isExpired ? undefined : cached.response;\r\n  }\r\n\r\n  put(req: HttpRequest<any>, response: HttpResponse<any>): void {\r\n    const url = req.urlWithParams;\r\n    this.messenger.add(`Caching response from \"${url}\".`);\r\n\r\n    const entry = { url, response, lastRead: Date.now() };\r\n    this.cache.set(url, entry);\r\n\r\n    // remove expired cache entries\r\n    const expired = Date.now() - maxAge;\r\n    this.cache.forEach(entry => {\r\n      if (entry.lastRead < expired) {\r\n        this.cache.delete(entry.url);\r\n      }\r\n    });\r\n\r\n    this.messenger.add(`Request cache size: ${this.cache.size}.`);\r\n  }\r\n}\r\n\r\n\r\n/*\r\nCopyright 2017-2018 Google Inc. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/","module.exports = \"<h3>Upload file</h3>\\r\\n<form enctype=\\\"multipart/form-data\\\" method=\\\"post\\\">\\r\\n  <div>\\r\\n    <label for=\\\"picked\\\">Choose file to upload</label>\\r\\n    <div>\\r\\n      <input type=\\\"file\\\" id=\\\"picked\\\" #picked\\r\\n        (click)=\\\"message=''\\\"\\r\\n        (change)=\\\"onPicked(picked)\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n  <p *ngIf=\\\"message\\\">{{message}}</p>\\r\\n</form>\\r\\n\\r\\n\\r\\n<!-- \\r\\nCopyright 2017-2018 Google Inc. All Rights Reserved.\\r\\nUse of this source code is governed by an MIT-style license that\\r\\ncan be found in the LICENSE file at http://angular.io/license\\r\\n-->\"","import { Component } from '@angular/core';\r\nimport { UploaderService } from './uploader.service';\r\n\r\n@Component({\r\n  selector: 'app-uploader',\r\n  templateUrl: './uploader.component.html',\r\n  providers: [ UploaderService ]\r\n})\r\nexport class UploaderComponent {\r\n  message: string;\r\n\r\n  constructor(private uploaderService: UploaderService) {}\r\n\r\n  onPicked(input: HTMLInputElement) {\r\n    const file = input.files[0];\r\n    if (file) {\r\n      this.uploaderService.upload(file).subscribe(\r\n        msg => {\r\n          input.value = null;\r\n          this.message = msg;\r\n        }\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*\r\nCopyright 2017-2018 Google Inc. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpClient, HttpEvent, HttpEventType, HttpProgressEvent,\r\n  HttpRequest, HttpResponse, HttpErrorResponse\r\n} from '@angular/common/http';\r\n\r\nimport { of } from 'rxjs';\r\nimport { catchError, last, map, tap } from 'rxjs/operators';\r\n\r\nimport { MessageService } from '../message.service';\r\n\r\n@Injectable()\r\nexport class UploaderService {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private messenger: MessageService) {}\r\n\r\n  // If uploading multiple files, change to:\r\n  // upload(files: FileList) {\r\n  //   const formData = new FormData();\r\n  //   files.forEach(f => formData.append(f.name, f));\r\n  //   new HttpRequest('POST', '/upload/file', formData, {reportProgress: true});\r\n  //   ...\r\n  // }\r\n\r\n  upload(file: File) {\r\n    if (!file) { return; }\r\n\r\n    // COULD HAVE WRITTEN:\r\n    // return this.http.post('/upload/file', file, {\r\n    //   reportProgress: true,\r\n    //   observe: 'events'\r\n    // }).pipe(\r\n\r\n    // Create the request object that POSTs the file to an upload endpoint.\r\n    // The `reportProgress` option tells HttpClient to listen and return\r\n    // XHR progress events.\r\n    const req = new HttpRequest('POST', '/upload/file', file, {\r\n      reportProgress: true\r\n    });\r\n\r\n    // The `HttpClient.request` API produces a raw event stream\r\n    // which includes start (sent), progress, and response events.\r\n    return this.http.request(req).pipe(\r\n      map(event => this.getEventMessage(event, file)),\r\n      tap(message => this.showProgress(message)),\r\n      last(), // return last (completed) message to caller\r\n      catchError(this.handleError(file))\r\n    );\r\n  }\r\n\r\n  /** Return distinct message for sent, upload progress, & response events */\r\n  private getEventMessage(event: HttpEvent<any>, file: File) {\r\n    switch (event.type) {\r\n      case HttpEventType.Sent:\r\n        return `Uploading file \"${file.name}\" of size ${file.size}.`;\r\n\r\n      case HttpEventType.UploadProgress:\r\n        // Compute and show the % done:\r\n        const percentDone = Math.round(100 * event.loaded / event.total);\r\n        return `File \"${file.name}\" is ${percentDone}% uploaded.`;\r\n\r\n      case HttpEventType.Response:\r\n        return `File \"${file.name}\" was completely uploaded!`;\r\n\r\n      default:\r\n        return `File \"${file.name}\" surprising upload event: ${event.type}.`;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns a function that handles Http upload failures.\r\n   * @param file - File object for file being uploaded\r\n   *\r\n   * When no `UploadInterceptor` and no server,\r\n   * you'll end up here in the error handler.\r\n   */\r\n  private handleError(file: File) {\r\n    const userMessage = `${file.name} upload failed.`;\r\n\r\n    return (error: HttpErrorResponse) => {\r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n\r\n      const message = (error.error instanceof Error) ?\r\n        error.error.message :\r\n       `server returned code ${error.status} with body \"${error.error}\"`;\r\n\r\n      this.messenger.add(`${userMessage} ${message}`);\r\n\r\n      // Let app keep running but indicate failure.\r\n      return of(userMessage);\r\n    };\r\n  }\r\n\r\n  private showProgress(message: string) {\r\n    this.messenger.add(message);\r\n  }\r\n}\r\n\r\n\r\n/*\r\nCopyright 2017-2018 Google Inc. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { AppModule } from './app/app.module';\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\r\n\r\n/*\r\nCopyright 2017-2018 Google Inc. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/"],"sourceRoot":""}